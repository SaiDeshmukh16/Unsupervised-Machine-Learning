{"cells":[{"cell_type":"markdown","id":"dbeb1d7a-1935-4458-a397-e0df785e0c24","metadata":{"id":"dbeb1d7a-1935-4458-a397-e0df785e0c24"},"source":["# Unsupervised ML\n","\n","This workshop is divided in three main parts, and contains a recap of the 10 songs on the platform: \n","\n","1. Concept of distances (Day 1)\n","2. K-means algorithm (Day 2)\n","3. Recap: example 10 spotify songs\n","4. Model performance evaluation (Day 3)\n","\n","## Distances\n","\n","### Manhattan distance"]},{"cell_type":"code","execution_count":110,"id":"c5b8f705-7140-44f2-b9c1-cb4e7c69985b","metadata":{"id":"c5b8f705-7140-44f2-b9c1-cb4e7c69985b","executionInfo":{"status":"ok","timestamp":1668439548475,"user_tz":-60,"elapsed":258,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","source":["https://docs.google.com/spreadsheets/d/BLAHBLAHBLAH/edit#gid=NUMBER\n","\n","https://docs.google.com/spreadsheets/d/BLAHBLAHBLAH/export?format=csv&gid=NUMBER"],"metadata":{"id":"YH5d2ANeHfVJ"},"id":"YH5d2ANeHfVJ"},{"cell_type":"code","source":["#https://docs.google.com/spreadsheets/d/1tGEwxTaRhczKEwuGYBiYzpihRXrkBqMVMTG_Pxwo-zU/edit#gid=18136796"],"metadata":{"id":"JnZ3_iUnFN83","executionInfo":{"status":"ok","timestamp":1668439548857,"user_tz":-60,"elapsed":4,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"JnZ3_iUnFN83","execution_count":111,"outputs":[]},{"cell_type":"code","source":["sheet_id = \"1tGEwxTaRhczKEwuGYBiYzpihRXrkBqMVMTG_Pxwo-zU\"\n","sheet_name = \"18136796\"\n","url =  f'https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv&gid={sheet_name}'"],"metadata":{"id":"RME5ya0Q10yT","executionInfo":{"status":"ok","timestamp":1668439548858,"user_tz":-60,"elapsed":4,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"RME5ya0Q10yT","execution_count":112,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(url, index_col='student')\n","df.drop(['age','favorite_color'], axis=1, inplace=True)\n","df"],"metadata":{"id":"7fx86k207SMO","colab":{"base_uri":"https://localhost:8080/","height":551},"executionInfo":{"status":"ok","timestamp":1668439549801,"user_tz":-60,"elapsed":947,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"d1e7d314-45ae-4f97-ec4f-a99e93d2ab09"},"id":"7fx86k207SMO","execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n","student                                                                   \n","Alexandra         10                10                10             10   \n","Amelie            10                10                 1              1   \n","Daniela           10                10                10              0   \n","Jorge              3                 3                 9              9   \n","Kaj                3                10                 7              8   \n","Konstantin         5                 0                 9              5   \n","Liane              7                 3                 3              5   \n","Mital              8                 5                 0              0   \n","Patrick            8                 0                 5              0   \n","Sabahuddin         3                 2                 0              0   \n","Sai                7                 0                 0              0   \n","Tal                7                 6                 8              0   \n","Xi                 8                10                 3              9   \n","Yanish             7                 5                 9              7   \n","Monika             9                 8                 7              1   \n","\n","             onion (raw)  peas  olives  blue_cheese  whisky  \n","student                                                      \n","Alexandra             10     7       6           10       0  \n","Amelie                10     9      10            4       2  \n","Daniela                3    10      10           10      10  \n","Jorge                  5     5       8           10       7  \n","Kaj                    8    10       8           10       9  \n","Konstantin            10     8      10            5       8  \n","Liane                  3     7       7            5       1  \n","Mital                  2     9       8            0       4  \n","Patrick                0     8       4            0       0  \n","Sabahuddin             7    10       6            6       7  \n","Sai                    3     5       7            0       2  \n","Tal            -99999999     8      10            7       3  \n","Xi                     7     9       8            1       0  \n","Yanish                 1     8       8            1       5  \n","Monika                 5    10       2            7       1  "],"text/html":["\n","  <div id=\"df-ed649aa1-133e-4d98-afc9-51733bf956c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger (meat)</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alexandra</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Amelie</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Daniela</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Jorge</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Kaj</th>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantin</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Liane</th>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mital</th>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Patrick</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sabahuddin</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Sai</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Tal</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>-99999999</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Xi</th>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yanish</th>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Monika</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed649aa1-133e-4d98-afc9-51733bf956c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ed649aa1-133e-4d98-afc9-51733bf956c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ed649aa1-133e-4d98-afc9-51733bf956c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":113}]},{"cell_type":"code","execution_count":114,"id":"e28ed9e1-945f-4d2e-a1ac-02799b44de72","metadata":{"id":"e28ed9e1-945f-4d2e-a1ac-02799b44de72","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1668439549802,"user_tz":-60,"elapsed":15,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"122623b7-3835-4117-d08b-161e039e0e1a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-b0538292-b686-439e-b475-bc044cb30293\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0538292-b686-439e-b475-bc044cb30293')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b0538292-b686-439e-b475-bc044cb30293 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b0538292-b686-439e-b475-bc044cb30293');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":114}],"source":["# example Mahattan distance\n","# between user 1 and 2\n","\n","sample = pd.DataFrame({\n","    'broccoli':[5, 8],\n","    'brussels_sprouts':[5, 7],\n","    'hamburger':[4, 9]\n","    }, \n","    index=['student_1','student_2']\n",")\n","\n","# sample = df.iloc[0:2,0:3]\n","sample"]},{"cell_type":"markdown","id":"ed72f925-55a7-47e9-944b-86d73cdc6921","metadata":{"id":"ed72f925-55a7-47e9-944b-86d73cdc6921"},"source":["#### Example 1: 2 students with 2 ratings"]},{"cell_type":"code","execution_count":115,"id":"c3667aef-67ab-470e-bbba-837ccd59f51d","metadata":{"id":"c3667aef-67ab-470e-bbba-837ccd59f51d","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1668439549803,"user_tz":-60,"elapsed":12,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"6b69557a-6241-4212-97db-30e927f16e57"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# plot the manhattan distance between two points\n","# plot rattings\n","plt.scatter(sample['broccoli'], sample['brussels_sprouts'], s=200)\n","\n","# # possibility 1 manhattan distance\n","y = [5, 5, 7]\n","x = [5, 8, 8]\n","plt.plot(x, y, c='r')\n","\n","# # possibility 2 manhattan distance\n","y = [5, 7, 7]\n","x = [5, 5, 8]\n","plt.plot(x, y, c='y')\n","\n","# plt.xlim(-1, 11)\n","# plt.ylim(-1, 11)\n","plt.title('Manhattan distance from broccoli rating to brussel sprouts rating')\n","plt.xlabel('Broccoli rating')\n","plt.ylabel('Brussels sprouts rating')\n","plt.show()"]},{"cell_type":"code","execution_count":116,"id":"04ecb6f2-82f5-4000-8c4b-ebae5b0e2fba","metadata":{"id":"04ecb6f2-82f5-4000-8c4b-ebae5b0e2fba","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1668439550680,"user_tz":-60,"elapsed":887,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"f7b9b377-8390-4c04-8f29-459dea9a273c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-5e111d89-5fbb-4d9a-b5da-59eee519779c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e111d89-5fbb-4d9a-b5da-59eee519779c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5e111d89-5fbb-4d9a-b5da-59eee519779c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5e111d89-5fbb-4d9a-b5da-59eee519779c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":116}],"source":["sample"]},{"cell_type":"markdown","id":"6f1a919f-ce2c-49a0-86a3-a196e33a84bb","metadata":{"id":"6f1a919f-ce2c-49a0-86a3-a196e33a84bb"},"source":["#### Example 2: Distance between 2 students with 3 ratings"]},{"cell_type":"code","execution_count":117,"id":"f3ec42ab-73f6-4842-becf-2eccadbb732d","metadata":{"id":"f3ec42ab-73f6-4842-becf-2eccadbb732d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550680,"user_tz":-60,"elapsed":49,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"e00a3ca7-5a53-493c-f601-e2ce0b604755"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":117}],"source":["# distance user 1 and user 2 for broccoli\n","md_m1_users1to2 = abs(sample.iloc[0,0] - sample.iloc[1,0])\n","md_m1_users1to2"]},{"cell_type":"code","execution_count":118,"id":"79caba16-cfe3-4078-9215-9682b962b953","metadata":{"id":"79caba16-cfe3-4078-9215-9682b962b953","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550682,"user_tz":-60,"elapsed":50,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"b8e8f604-da53-484d-c25d-830af1e4429b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":118}],"source":["# distance user 1 and user 2 for brussel_sprouts\n","md_m2_users1to2 = abs(sample.iloc[0,1] - sample.iloc[1,1])\n","md_m2_users1to2"]},{"cell_type":"code","execution_count":119,"id":"870a2e8d-ff77-4a75-b421-fb608705ef99","metadata":{"id":"870a2e8d-ff77-4a75-b421-fb608705ef99","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550682,"user_tz":-60,"elapsed":46,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"a52991c7-fff4-49c8-e892-961ff49ae3c6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":119}],"source":["# distance user 1 and user 2 for hamburguer\n","md_m3_users1to2 = abs(sample.iloc[0,2] - sample.iloc[1,2])\n","md_m3_users1to2"]},{"cell_type":"code","execution_count":120,"id":"2781320e-52ea-4ca6-a922-39d0358fad8a","metadata":{"id":"2781320e-52ea-4ca6-a922-39d0358fad8a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550682,"user_tz":-60,"elapsed":42,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"95d75f80-36d4-46f2-faa3-0f260b0d5ee1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":120}],"source":["# and now to calculate the distance between both users, it will be\n","md_users1to2 = md_m1_users1to2 + md_m2_users1to2 + md_m3_users1to2\n","md_users1to2"]},{"cell_type":"code","execution_count":121,"id":"f512496e-b7a3-45dc-917a-a05b6f80ddb8","metadata":{"id":"f512496e-b7a3-45dc-917a-a05b6f80ddb8","colab":{"base_uri":"https://localhost:8080/","height":248},"executionInfo":{"status":"ok","timestamp":1668439550683,"user_tz":-60,"elapsed":40,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"db41fa9a-3f4b-4efa-9d85-86150b1c55c5"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# how can we visualize that?\n","import matplotlib.pyplot as plt\n","from mpl_toolkits.mplot3d import Axes3D\n","\n","fig = plt.figure()\n","ax = fig.add_subplot(111, projection='3d')\n","plt.title('Student 1 and student 2 rating positions')\n","i,j,k = (   [sample.iloc[0,0],sample.iloc[1,0],sample.iloc[1,0],sample.iloc[1,0]],\n","            [sample.iloc[0,1],sample.iloc[0,1],sample.iloc[1,1],sample.iloc[1,1]],\n","            [sample.iloc[0,2],sample.iloc[0,2],sample.iloc[0,2],sample.iloc[1,2]] )\n","ax.plot(i,j,k,color='red')\n","ax.text(6.5,5,4, md_m1_users1to2)\n","ax.text(8,6,4, md_m2_users1to2)\n","ax.text(8,7,6, md_m3_users1to2)\n","ax.scatter(xs=sample['broccoli'], ys=sample['brussels_sprouts'], zs=sample['hamburger'])\n","plt.show()"]},{"cell_type":"markdown","id":"ce67a2c8-4d22-4344-97aa-916583064832","metadata":{"id":"ce67a2c8-4d22-4344-97aa-916583064832"},"source":["#### CHALLENGE: Calculating Manhattan distance between all the students for three foods"]},{"cell_type":"code","execution_count":122,"id":"48cde439-7431-4ff1-90b8-8e3a25e54999","metadata":{"tags":[],"id":"48cde439-7431-4ff1-90b8-8e3a25e54999","colab":{"base_uri":"https://localhost:8080/","height":519},"executionInfo":{"status":"ok","timestamp":1668439550683,"user_tz":-60,"elapsed":36,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"54cee2e6-00f3-44da-f744-7a6e38ed453e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)   onion (raw)  \\\n","0         10                10                10             10            10   \n","1         10                10                 1              1            10   \n","2         10                10                10              0             3   \n","3          3                 3                 9              9             5   \n","4          3                10                 7              8             8   \n","5          5                 0                 9              5            10   \n","6          7                 3                 3              5             3   \n","7          8                 5                 0              0             2   \n","8          8                 0                 5              0             0   \n","9          3                 2                 0              0             7   \n","10         7                 0                 0              0             3   \n","11         7                 6                 8              0     -99999999   \n","12         8                10                 3              9             7   \n","13         7                 5                 9              7             1   \n","14         9                 8                 7              1             5   \n","\n","    peas  olives  blue_cheese  whisky  \n","0      7       6           10       0  \n","1      9      10            4       2  \n","2     10      10           10      10  \n","3      5       8           10       7  \n","4     10       8           10       9  \n","5      8      10            5       8  \n","6      7       7            5       1  \n","7      9       8            0       4  \n","8      8       4            0       0  \n","9     10       6            6       7  \n","10     5       7            0       2  \n","11     8      10            7       3  \n","12     9       8            1       0  \n","13     8       8            1       5  \n","14    10       2            7       1  "],"text/html":["\n","  <div id=\"df-3865d211-4221-4ef6-9378-305b136e69c5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger (meat)</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>-99999999</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3865d211-4221-4ef6-9378-305b136e69c5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3865d211-4221-4ef6-9378-305b136e69c5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3865d211-4221-4ef6-9378-305b136e69c5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":122}],"source":["# create a for loop to automate the previous process for all the students (only the first three columns\n","df.reset_index(drop=True)"]},{"cell_type":"code","source":[],"metadata":{"id":"yKkxm5BniPNK","executionInfo":{"status":"ok","timestamp":1668439550684,"user_tz":-60,"elapsed":36,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"yKkxm5BniPNK","execution_count":122,"outputs":[]},{"cell_type":"code","execution_count":123,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550684,"user_tz":-60,"elapsed":36,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"b6afe8d7-1f86-41ac-af3d-a95263cde762","id":"3eJ8GJZ1iP1k"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":123}],"source":["# distance user 1 and user 2 for brussel_sprouts\n","#for i in\n","\n","md_m2_users1to2 = abs(df.iloc[0,1] - df.iloc[1,1])\n","md_m2_users1to2"],"id":"3eJ8GJZ1iP1k"},{"cell_type":"code","source":["\n","broccoli_alex = []\n","for i in range(df.broccoli.count()):\n","  md_m2_users1to2 = abs(df.iloc[0,1] - df.iloc[i,1])\n","  broccoli_alex.append(md_m2_users1to2)\n","\n","broccoli_alex"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x0ZRBGPsij3R","executionInfo":{"status":"ok","timestamp":1668439550685,"user_tz":-60,"elapsed":32,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"4ddffb43-8230-45db-c584-0d4381f1e2e4"},"id":"x0ZRBGPsij3R","execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 0, 0, 7, 0, 10, 7, 5, 10, 8, 10, 4, 0, 5, 2]"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":[],"metadata":{"id":"DNu9k3MmSJzi","executionInfo":{"status":"ok","timestamp":1668439550685,"user_tz":-60,"elapsed":29,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"DNu9k3MmSJzi","execution_count":124,"outputs":[]},{"cell_type":"code","source":["# create a for loop to automate the previous process for all the students (only the first three columns)\n","manh_dist = []\n","\n","for student in df.index: \n","    \n","    # get the rating for the first three columns \n","    broccoli = df.loc[student][0]\n","    brussel_sprouts = df.loc[student][1]\n","    hamburguer = df.loc[student][2]\n","\n","    print(f'{student} ratings for broccoli: {broccoli}, brussel_sprouts: {brussel_sprouts} and hamburger {hamburguer}')\n","    \n","    student_distance = []\n","\n","    # now compare its ratings with everyone else: \n","    for student_to_compare in df.index:\n","        \n","        # get the ratings for the other students to compare\n","        broccoli_to_compare = df.loc[student_to_compare][0]\n","        brussel_sprouts_to_compare = df.loc[student_to_compare][1]\n","        hamburguer_to_compare = df.loc[student_to_compare][2]\n","        \n","        # look for the distances between both students\n","        broccoli_distance = abs(broccoli - broccoli_to_compare)\n","        brussel_sprouts_distance = abs(brussel_sprouts - brussel_sprouts_to_compare)\n","        hamburguer_distance = abs(hamburguer - hamburguer_to_compare)\n","        \n","        # summarise distance between both students\n","        distance = broccoli_distance + brussel_sprouts_distance + hamburguer_distance\n","        \n","        print(f'The distance between {student} and {student_to_compare} is {distance}')\n","        \n","        # store the distance\n","        student_distance.append(distance)\n","        \n","    # the list of distances of an specific student\n","    print(f'The distances from {student} are {student_distance}')\n","    \n","    # store the student distances in all the students distances\n","    manh_dist.append(student_distance)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gS7PWsRO1Yrx","executionInfo":{"status":"ok","timestamp":1668439550685,"user_tz":-60,"elapsed":28,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"83fd9086-1074-4b29-fedd-e0d57615867a"},"id":"gS7PWsRO1Yrx","execution_count":125,"outputs":[{"output_type":"stream","name":"stdout","text":["Alexandra ratings for broccoli: 10, brussel_sprouts: 10 and hamburger 10\n","The distance between Alexandra and Alexandra is 0\n","The distance between Alexandra and Amelie is 9\n","The distance between Alexandra and Daniela is 0\n","The distance between Alexandra and Jorge is 15\n","The distance between Alexandra and Kaj is 10\n","The distance between Alexandra and Konstantin is 16\n","The distance between Alexandra and Liane is 17\n","The distance between Alexandra and Mital is 17\n","The distance between Alexandra and Patrick is 17\n","The distance between Alexandra and Sabahuddin is 25\n","The distance between Alexandra and Sai is 23\n","The distance between Alexandra and Tal is 9\n","The distance between Alexandra and Xi is 9\n","The distance between Alexandra and Yanish is 9\n","The distance between Alexandra and Monika is 6\n","The distances from Alexandra are [0, 9, 0, 15, 10, 16, 17, 17, 17, 25, 23, 9, 9, 9, 6]\n","Amelie ratings for broccoli: 10, brussel_sprouts: 10 and hamburger 1\n","The distance between Amelie and Alexandra is 9\n","The distance between Amelie and Amelie is 0\n","The distance between Amelie and Daniela is 9\n","The distance between Amelie and Jorge is 22\n","The distance between Amelie and Kaj is 13\n","The distance between Amelie and Konstantin is 23\n","The distance between Amelie and Liane is 12\n","The distance between Amelie and Mital is 8\n","The distance between Amelie and Patrick is 16\n","The distance between Amelie and Sabahuddin is 16\n","The distance between Amelie and Sai is 14\n","The distance between Amelie and Tal is 14\n","The distance between Amelie and Xi is 4\n","The distance between Amelie and Yanish is 16\n","The distance between Amelie and Monika is 9\n","The distances from Amelie are [9, 0, 9, 22, 13, 23, 12, 8, 16, 16, 14, 14, 4, 16, 9]\n","Daniela ratings for broccoli: 10, brussel_sprouts: 10 and hamburger 10\n","The distance between Daniela and Alexandra is 0\n","The distance between Daniela and Amelie is 9\n","The distance between Daniela and Daniela is 0\n","The distance between Daniela and Jorge is 15\n","The distance between Daniela and Kaj is 10\n","The distance between Daniela and Konstantin is 16\n","The distance between Daniela and Liane is 17\n","The distance between Daniela and Mital is 17\n","The distance between Daniela and Patrick is 17\n","The distance between Daniela and Sabahuddin is 25\n","The distance between Daniela and Sai is 23\n","The distance between Daniela and Tal is 9\n","The distance between Daniela and Xi is 9\n","The distance between Daniela and Yanish is 9\n","The distance between Daniela and Monika is 6\n","The distances from Daniela are [0, 9, 0, 15, 10, 16, 17, 17, 17, 25, 23, 9, 9, 9, 6]\n","Jorge ratings for broccoli: 3, brussel_sprouts: 3 and hamburger 9\n","The distance between Jorge and Alexandra is 15\n","The distance between Jorge and Amelie is 22\n","The distance between Jorge and Daniela is 15\n","The distance between Jorge and Jorge is 0\n","The distance between Jorge and Kaj is 9\n","The distance between Jorge and Konstantin is 5\n","The distance between Jorge and Liane is 10\n","The distance between Jorge and Mital is 16\n","The distance between Jorge and Patrick is 12\n","The distance between Jorge and Sabahuddin is 10\n","The distance between Jorge and Sai is 16\n","The distance between Jorge and Tal is 8\n","The distance between Jorge and Xi is 18\n","The distance between Jorge and Yanish is 6\n","The distance between Jorge and Monika is 13\n","The distances from Jorge are [15, 22, 15, 0, 9, 5, 10, 16, 12, 10, 16, 8, 18, 6, 13]\n","Kaj ratings for broccoli: 3, brussel_sprouts: 10 and hamburger 7\n","The distance between Kaj and Alexandra is 10\n","The distance between Kaj and Amelie is 13\n","The distance between Kaj and Daniela is 10\n","The distance between Kaj and Jorge is 9\n","The distance between Kaj and Kaj is 0\n","The distance between Kaj and Konstantin is 14\n","The distance between Kaj and Liane is 15\n","The distance between Kaj and Mital is 17\n","The distance between Kaj and Patrick is 17\n","The distance between Kaj and Sabahuddin is 15\n","The distance between Kaj and Sai is 21\n","The distance between Kaj and Tal is 9\n","The distance between Kaj and Xi is 9\n","The distance between Kaj and Yanish is 11\n","The distance between Kaj and Monika is 8\n","The distances from Kaj are [10, 13, 10, 9, 0, 14, 15, 17, 17, 15, 21, 9, 9, 11, 8]\n","Konstantin ratings for broccoli: 5, brussel_sprouts: 0 and hamburger 9\n","The distance between Konstantin and Alexandra is 16\n","The distance between Konstantin and Amelie is 23\n","The distance between Konstantin and Daniela is 16\n","The distance between Konstantin and Jorge is 5\n","The distance between Konstantin and Kaj is 14\n","The distance between Konstantin and Konstantin is 0\n","The distance between Konstantin and Liane is 11\n","The distance between Konstantin and Mital is 17\n","The distance between Konstantin and Patrick is 7\n","The distance between Konstantin and Sabahuddin is 13\n","The distance between Konstantin and Sai is 11\n","The distance between Konstantin and Tal is 9\n","The distance between Konstantin and Xi is 19\n","The distance between Konstantin and Yanish is 7\n","The distance between Konstantin and Monika is 14\n","The distances from Konstantin are [16, 23, 16, 5, 14, 0, 11, 17, 7, 13, 11, 9, 19, 7, 14]\n","Liane ratings for broccoli: 7, brussel_sprouts: 3 and hamburger 3\n","The distance between Liane and Alexandra is 17\n","The distance between Liane and Amelie is 12\n","The distance between Liane and Daniela is 17\n","The distance between Liane and Jorge is 10\n","The distance between Liane and Kaj is 15\n","The distance between Liane and Konstantin is 11\n","The distance between Liane and Liane is 0\n","The distance between Liane and Mital is 6\n","The distance between Liane and Patrick is 6\n","The distance between Liane and Sabahuddin is 8\n","The distance between Liane and Sai is 6\n","The distance between Liane and Tal is 8\n","The distance between Liane and Xi is 8\n","The distance between Liane and Yanish is 8\n","The distance between Liane and Monika is 11\n","The distances from Liane are [17, 12, 17, 10, 15, 11, 0, 6, 6, 8, 6, 8, 8, 8, 11]\n","Mital ratings for broccoli: 8, brussel_sprouts: 5 and hamburger 0\n","The distance between Mital and Alexandra is 17\n","The distance between Mital and Amelie is 8\n","The distance between Mital and Daniela is 17\n","The distance between Mital and Jorge is 16\n","The distance between Mital and Kaj is 17\n","The distance between Mital and Konstantin is 17\n","The distance between Mital and Liane is 6\n","The distance between Mital and Mital is 0\n","The distance between Mital and Patrick is 10\n","The distance between Mital and Sabahuddin is 8\n","The distance between Mital and Sai is 6\n","The distance between Mital and Tal is 10\n","The distance between Mital and Xi is 8\n","The distance between Mital and Yanish is 10\n","The distance between Mital and Monika is 11\n","The distances from Mital are [17, 8, 17, 16, 17, 17, 6, 0, 10, 8, 6, 10, 8, 10, 11]\n","Patrick ratings for broccoli: 8, brussel_sprouts: 0 and hamburger 5\n","The distance between Patrick and Alexandra is 17\n","The distance between Patrick and Amelie is 16\n","The distance between Patrick and Daniela is 17\n","The distance between Patrick and Jorge is 12\n","The distance between Patrick and Kaj is 17\n","The distance between Patrick and Konstantin is 7\n","The distance between Patrick and Liane is 6\n","The distance between Patrick and Mital is 10\n","The distance between Patrick and Patrick is 0\n","The distance between Patrick and Sabahuddin is 12\n","The distance between Patrick and Sai is 6\n","The distance between Patrick and Tal is 10\n","The distance between Patrick and Xi is 12\n","The distance between Patrick and Yanish is 10\n","The distance between Patrick and Monika is 11\n","The distances from Patrick are [17, 16, 17, 12, 17, 7, 6, 10, 0, 12, 6, 10, 12, 10, 11]\n","Sabahuddin ratings for broccoli: 3, brussel_sprouts: 2 and hamburger 0\n","The distance between Sabahuddin and Alexandra is 25\n","The distance between Sabahuddin and Amelie is 16\n","The distance between Sabahuddin and Daniela is 25\n","The distance between Sabahuddin and Jorge is 10\n","The distance between Sabahuddin and Kaj is 15\n","The distance between Sabahuddin and Konstantin is 13\n","The distance between Sabahuddin and Liane is 8\n","The distance between Sabahuddin and Mital is 8\n","The distance between Sabahuddin and Patrick is 12\n","The distance between Sabahuddin and Sabahuddin is 0\n","The distance between Sabahuddin and Sai is 6\n","The distance between Sabahuddin and Tal is 16\n","The distance between Sabahuddin and Xi is 16\n","The distance between Sabahuddin and Yanish is 16\n","The distance between Sabahuddin and Monika is 19\n","The distances from Sabahuddin are [25, 16, 25, 10, 15, 13, 8, 8, 12, 0, 6, 16, 16, 16, 19]\n","Sai ratings for broccoli: 7, brussel_sprouts: 0 and hamburger 0\n","The distance between Sai and Alexandra is 23\n","The distance between Sai and Amelie is 14\n","The distance between Sai and Daniela is 23\n","The distance between Sai and Jorge is 16\n","The distance between Sai and Kaj is 21\n","The distance between Sai and Konstantin is 11\n","The distance between Sai and Liane is 6\n","The distance between Sai and Mital is 6\n","The distance between Sai and Patrick is 6\n","The distance between Sai and Sabahuddin is 6\n","The distance between Sai and Sai is 0\n","The distance between Sai and Tal is 14\n","The distance between Sai and Xi is 14\n","The distance between Sai and Yanish is 14\n","The distance between Sai and Monika is 17\n","The distances from Sai are [23, 14, 23, 16, 21, 11, 6, 6, 6, 6, 0, 14, 14, 14, 17]\n","Tal ratings for broccoli: 7, brussel_sprouts: 6 and hamburger 8\n","The distance between Tal and Alexandra is 9\n","The distance between Tal and Amelie is 14\n","The distance between Tal and Daniela is 9\n","The distance between Tal and Jorge is 8\n","The distance between Tal and Kaj is 9\n","The distance between Tal and Konstantin is 9\n","The distance between Tal and Liane is 8\n","The distance between Tal and Mital is 10\n","The distance between Tal and Patrick is 10\n","The distance between Tal and Sabahuddin is 16\n","The distance between Tal and Sai is 14\n","The distance between Tal and Tal is 0\n","The distance between Tal and Xi is 10\n","The distance between Tal and Yanish is 2\n","The distance between Tal and Monika is 5\n","The distances from Tal are [9, 14, 9, 8, 9, 9, 8, 10, 10, 16, 14, 0, 10, 2, 5]\n","Xi ratings for broccoli: 8, brussel_sprouts: 10 and hamburger 3\n","The distance between Xi and Alexandra is 9\n","The distance between Xi and Amelie is 4\n","The distance between Xi and Daniela is 9\n","The distance between Xi and Jorge is 18\n","The distance between Xi and Kaj is 9\n","The distance between Xi and Konstantin is 19\n","The distance between Xi and Liane is 8\n","The distance between Xi and Mital is 8\n","The distance between Xi and Patrick is 12\n","The distance between Xi and Sabahuddin is 16\n","The distance between Xi and Sai is 14\n","The distance between Xi and Tal is 10\n","The distance between Xi and Xi is 0\n","The distance between Xi and Yanish is 12\n","The distance between Xi and Monika is 7\n","The distances from Xi are [9, 4, 9, 18, 9, 19, 8, 8, 12, 16, 14, 10, 0, 12, 7]\n","Yanish ratings for broccoli: 7, brussel_sprouts: 5 and hamburger 9\n","The distance between Yanish and Alexandra is 9\n","The distance between Yanish and Amelie is 16\n","The distance between Yanish and Daniela is 9\n","The distance between Yanish and Jorge is 6\n","The distance between Yanish and Kaj is 11\n","The distance between Yanish and Konstantin is 7\n","The distance between Yanish and Liane is 8\n","The distance between Yanish and Mital is 10\n","The distance between Yanish and Patrick is 10\n","The distance between Yanish and Sabahuddin is 16\n","The distance between Yanish and Sai is 14\n","The distance between Yanish and Tal is 2\n","The distance between Yanish and Xi is 12\n","The distance between Yanish and Yanish is 0\n","The distance between Yanish and Monika is 7\n","The distances from Yanish are [9, 16, 9, 6, 11, 7, 8, 10, 10, 16, 14, 2, 12, 0, 7]\n","Monika ratings for broccoli: 9, brussel_sprouts: 8 and hamburger 7\n","The distance between Monika and Alexandra is 6\n","The distance between Monika and Amelie is 9\n","The distance between Monika and Daniela is 6\n","The distance between Monika and Jorge is 13\n","The distance between Monika and Kaj is 8\n","The distance between Monika and Konstantin is 14\n","The distance between Monika and Liane is 11\n","The distance between Monika and Mital is 11\n","The distance between Monika and Patrick is 11\n","The distance between Monika and Sabahuddin is 19\n","The distance between Monika and Sai is 17\n","The distance between Monika and Tal is 5\n","The distance between Monika and Xi is 7\n","The distance between Monika and Yanish is 7\n","The distance between Monika and Monika is 0\n","The distances from Monika are [6, 9, 6, 13, 8, 14, 11, 11, 11, 19, 17, 5, 7, 7, 0]\n"]}]},{"cell_type":"markdown","id":"d00b8331-b2f9-49fc-a0f6-e93a04237d4a","metadata":{"id":"d00b8331-b2f9-49fc-a0f6-e93a04237d4a"},"source":["#### Calculating distances for all the foods\n","\n","##### Review list comprehensions"]},{"cell_type":"code","execution_count":126,"id":"3b74a781-9080-446a-94f0-9624c33d840e","metadata":{"id":"3b74a781-9080-446a-94f0-9624c33d840e","executionInfo":{"status":"ok","timestamp":1668439550686,"user_tz":-60,"elapsed":25,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"outputs":[],"source":["temp_list = [1, 2, 3, 4]\n","# add 1 to all this elements\n","\n","temp_list_plus_1 = []\n","for num in temp_list: \n","    temp_list_plus_1.append(num + 1)"]},{"cell_type":"code","execution_count":127,"id":"2aa23571-1d40-4f06-aaa4-205c16bdc4aa","metadata":{"id":"2aa23571-1d40-4f06-aaa4-205c16bdc4aa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550686,"user_tz":-60,"elapsed":25,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"dbf674ae-e220-4e50-a45f-a788510c118f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 3, 4, 5]"]},"metadata":{},"execution_count":127}],"source":["temp_list_plus_1"]},{"cell_type":"code","execution_count":128,"id":"0fe1edba-dbd1-4e8b-a3d3-89427514c311","metadata":{"id":"0fe1edba-dbd1-4e8b-a3d3-89427514c311","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439550687,"user_tz":-60,"elapsed":18,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"f37cc459-600b-407c-b901-84b3b12d15ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 3, 4, 5]"]},"metadata":{},"execution_count":128}],"source":["[num + 1 for num in temp_list]"]},{"cell_type":"code","source":[],"metadata":{"id":"mqu3USsVdxBq","executionInfo":{"status":"ok","timestamp":1668439550688,"user_tz":-60,"elapsed":17,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"mqu3USsVdxBq","execution_count":128,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"QobWqdB7dw3a","executionInfo":{"status":"ok","timestamp":1668439550689,"user_tz":-60,"elapsed":17,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"QobWqdB7dw3a","execution_count":128,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"WfEokKNvdwtE","executionInfo":{"status":"ok","timestamp":1668439550690,"user_tz":-60,"elapsed":18,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"WfEokKNvdwtE","execution_count":128,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Bh39bGuITuWJ","executionInfo":{"status":"ok","timestamp":1668439550690,"user_tz":-60,"elapsed":18,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"Bh39bGuITuWJ","execution_count":128,"outputs":[]},{"cell_type":"markdown","id":"561c66ab-cbb2-4a89-8eb8-78e83ae9a8bc","metadata":{"id":"561c66ab-cbb2-4a89-8eb8-78e83ae9a8bc"},"source":["##### Apply list comprehensions"]},{"cell_type":"code","execution_count":129,"id":"f6160eb9-f6a0-4fc3-bd78-9b4ed70679b2","metadata":{"id":"f6160eb9-f6a0-4fc3-bd78-9b4ed70679b2","colab":{"base_uri":"https://localhost:8080/","height":551},"executionInfo":{"status":"ok","timestamp":1668439551448,"user_tz":-60,"elapsed":776,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"cf31bee6-38cd-4a42-e82b-33349968ad8f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["student     Alexandra     Amelie    Daniela      Jorge        Kaj  Konstantin  \\\n","student                                                                         \n","Alexandra           0         32         34         32         28          39   \n","Amelie             32          0         32         52         38          35   \n","Daniela            34         32          0         36         26          37   \n","Jorge              32         52         36          0         20          25   \n","Kaj                28         38         26         20          0          29   \n","Konstantin         39         35         37         25         29           0   \n","Liane              36         30         42         30         40          29   \n","Mital              53         25         37         45         47          42   \n","Patrick            50         40         48         50         58          41   \n","Sabahuddin         52         32         40         32         32          29   \n","Sai                55         33         49         43         57          40   \n","Tal         100000039  100000029  100000023  100000033  100000037   100000030   \n","Xi                 26         22         44         40         30          41   \n","Yanish             38         40         36         26         34          27   \n","Monika             31         27         29         41         35          42   \n","\n","student         Liane      Mital    Patrick  Sabahuddin        Sai        Tal  \\\n","student                                                                         \n","Alexandra          36         53         50          52         55  100000039   \n","Amelie             30         25         40          32         33  100000029   \n","Daniela            42         37         48          40         49  100000023   \n","Jorge              30         45         50          32         43  100000033   \n","Kaj                40         47         58          32         57  100000037   \n","Konstantin         29         42         41          29         40  100000030   \n","Liane               0         23         24          28         19  100000023   \n","Mital              23          0         21          25         14  100000022   \n","Patrick            24         21          0          36         17  100000025   \n","Sabahuddin         28         25         36           0         27  100000033   \n","Sai                19         14         17          27          0  100000030   \n","Tal         100000023  100000022  100000025   100000033  100000030          0   \n","Xi                 24         27         34          40         35  100000037   \n","Yanish             22         21         28          40         31  100000019   \n","Monika             27         32         29          33         38  100000022   \n","\n","student            Xi     Yanish     Monika  \n","student                                      \n","Alexandra          26         38         31  \n","Amelie             22         40         27  \n","Daniela            44         36         29  \n","Jorge              40         26         41  \n","Kaj                30         34         35  \n","Konstantin         41         27         42  \n","Liane              24         22         27  \n","Mital              27         21         32  \n","Patrick            34         28         29  \n","Sabahuddin         40         40         33  \n","Sai                35         31         38  \n","Tal         100000037  100000019  100000022  \n","Xi                  0         26         31  \n","Yanish             26          0         35  \n","Monika             31         35          0  "],"text/html":["\n","  <div id=\"df-bb32f69f-320d-42fd-8092-8f38f2fcd736\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>student</th>\n","      <th>Alexandra</th>\n","      <th>Amelie</th>\n","      <th>Daniela</th>\n","      <th>Jorge</th>\n","      <th>Kaj</th>\n","      <th>Konstantin</th>\n","      <th>Liane</th>\n","      <th>Mital</th>\n","      <th>Patrick</th>\n","      <th>Sabahuddin</th>\n","      <th>Sai</th>\n","      <th>Tal</th>\n","      <th>Xi</th>\n","      <th>Yanish</th>\n","      <th>Monika</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alexandra</th>\n","      <td>0</td>\n","      <td>32</td>\n","      <td>34</td>\n","      <td>32</td>\n","      <td>28</td>\n","      <td>39</td>\n","      <td>36</td>\n","      <td>53</td>\n","      <td>50</td>\n","      <td>52</td>\n","      <td>55</td>\n","      <td>100000039</td>\n","      <td>26</td>\n","      <td>38</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Amelie</th>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>32</td>\n","      <td>52</td>\n","      <td>38</td>\n","      <td>35</td>\n","      <td>30</td>\n","      <td>25</td>\n","      <td>40</td>\n","      <td>32</td>\n","      <td>33</td>\n","      <td>100000029</td>\n","      <td>22</td>\n","      <td>40</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>Daniela</th>\n","      <td>34</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>26</td>\n","      <td>37</td>\n","      <td>42</td>\n","      <td>37</td>\n","      <td>48</td>\n","      <td>40</td>\n","      <td>49</td>\n","      <td>100000023</td>\n","      <td>44</td>\n","      <td>36</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Jorge</th>\n","      <td>32</td>\n","      <td>52</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>20</td>\n","      <td>25</td>\n","      <td>30</td>\n","      <td>45</td>\n","      <td>50</td>\n","      <td>32</td>\n","      <td>43</td>\n","      <td>100000033</td>\n","      <td>40</td>\n","      <td>26</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>Kaj</th>\n","      <td>28</td>\n","      <td>38</td>\n","      <td>26</td>\n","      <td>20</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>40</td>\n","      <td>47</td>\n","      <td>58</td>\n","      <td>32</td>\n","      <td>57</td>\n","      <td>100000037</td>\n","      <td>30</td>\n","      <td>34</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantin</th>\n","      <td>39</td>\n","      <td>35</td>\n","      <td>37</td>\n","      <td>25</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>29</td>\n","      <td>42</td>\n","      <td>41</td>\n","      <td>29</td>\n","      <td>40</td>\n","      <td>100000030</td>\n","      <td>41</td>\n","      <td>27</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>Liane</th>\n","      <td>36</td>\n","      <td>30</td>\n","      <td>42</td>\n","      <td>30</td>\n","      <td>40</td>\n","      <td>29</td>\n","      <td>0</td>\n","      <td>23</td>\n","      <td>24</td>\n","      <td>28</td>\n","      <td>19</td>\n","      <td>100000023</td>\n","      <td>24</td>\n","      <td>22</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>Mital</th>\n","      <td>53</td>\n","      <td>25</td>\n","      <td>37</td>\n","      <td>45</td>\n","      <td>47</td>\n","      <td>42</td>\n","      <td>23</td>\n","      <td>0</td>\n","      <td>21</td>\n","      <td>25</td>\n","      <td>14</td>\n","      <td>100000022</td>\n","      <td>27</td>\n","      <td>21</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>Patrick</th>\n","      <td>50</td>\n","      <td>40</td>\n","      <td>48</td>\n","      <td>50</td>\n","      <td>58</td>\n","      <td>41</td>\n","      <td>24</td>\n","      <td>21</td>\n","      <td>0</td>\n","      <td>36</td>\n","      <td>17</td>\n","      <td>100000025</td>\n","      <td>34</td>\n","      <td>28</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Sabahuddin</th>\n","      <td>52</td>\n","      <td>32</td>\n","      <td>40</td>\n","      <td>32</td>\n","      <td>32</td>\n","      <td>29</td>\n","      <td>28</td>\n","      <td>25</td>\n","      <td>36</td>\n","      <td>0</td>\n","      <td>27</td>\n","      <td>100000033</td>\n","      <td>40</td>\n","      <td>40</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>Sai</th>\n","      <td>55</td>\n","      <td>33</td>\n","      <td>49</td>\n","      <td>43</td>\n","      <td>57</td>\n","      <td>40</td>\n","      <td>19</td>\n","      <td>14</td>\n","      <td>17</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>100000030</td>\n","      <td>35</td>\n","      <td>31</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>Tal</th>\n","      <td>100000039</td>\n","      <td>100000029</td>\n","      <td>100000023</td>\n","      <td>100000033</td>\n","      <td>100000037</td>\n","      <td>100000030</td>\n","      <td>100000023</td>\n","      <td>100000022</td>\n","      <td>100000025</td>\n","      <td>100000033</td>\n","      <td>100000030</td>\n","      <td>0</td>\n","      <td>100000037</td>\n","      <td>100000019</td>\n","      <td>100000022</td>\n","    </tr>\n","    <tr>\n","      <th>Xi</th>\n","      <td>26</td>\n","      <td>22</td>\n","      <td>44</td>\n","      <td>40</td>\n","      <td>30</td>\n","      <td>41</td>\n","      <td>24</td>\n","      <td>27</td>\n","      <td>34</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>100000037</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>Yanish</th>\n","      <td>38</td>\n","      <td>40</td>\n","      <td>36</td>\n","      <td>26</td>\n","      <td>34</td>\n","      <td>27</td>\n","      <td>22</td>\n","      <td>21</td>\n","      <td>28</td>\n","      <td>40</td>\n","      <td>31</td>\n","      <td>100000019</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>Monika</th>\n","      <td>31</td>\n","      <td>27</td>\n","      <td>29</td>\n","      <td>41</td>\n","      <td>35</td>\n","      <td>42</td>\n","      <td>27</td>\n","      <td>32</td>\n","      <td>29</td>\n","      <td>33</td>\n","      <td>38</td>\n","      <td>100000022</td>\n","      <td>31</td>\n","      <td>35</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb32f69f-320d-42fd-8092-8f38f2fcd736')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bb32f69f-320d-42fd-8092-8f38f2fcd736 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bb32f69f-320d-42fd-8092-8f38f2fcd736');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":129}],"source":["# can you do the same process than before for all the columns?\n","# create a function to do it for all the users\n","def manhattan_distance(data, student, student_to_compare): \n","    distance = (\n","        pd.DataFrame({\n","            'student_1':data.loc[student,:],\n","            'student_2':data.loc[student_to_compare,:]\n","        })\n","        # applying the formula\n","        .assign(dist_abs = lambda x: abs(x.student_1 - x.student_2))\n","        .agg({'dist_abs':'sum'})[0]\n","    )\n","    return distance\n","\n","distances = [[manhattan_distance(df, student, student_to_compare) for student in df.index] for student_to_compare in df.index]\n","manh_dist = pd.DataFrame(distances, columns=df.index, index=df.index)\n","manh_dist"]},{"cell_type":"code","execution_count":130,"id":"9863a077-e816-4ed6-824d-bdd9179b154c","metadata":{"id":"9863a077-e816-4ed6-824d-bdd9179b154c","colab":{"base_uri":"https://localhost:8080/","height":574},"executionInfo":{"status":"ok","timestamp":1668439552037,"user_tz":-60,"elapsed":592,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"f685ce13-9e33-4e1b-bc88-53c9db802a58"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f6ca5e64250>"]},"metadata":{},"execution_count":130},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import seaborn as sns\n","plt.subplots(figsize=(12, 8))\n","sns.heatmap(manh_dist)"]},{"cell_type":"markdown","id":"fa327928-7db8-40e2-9ffb-20a8294557b7","metadata":{"id":"fa327928-7db8-40e2-9ffb-20a8294557b7"},"source":["### Euclidean distance\n","\n","Euclidean distance: \n","\n","$$d = \\sqrt {\\left( {x_1 - x_2 } \\right)^2 + \\left( {y_1 - y_2 } \\right)^2 }$$"]},{"cell_type":"code","execution_count":131,"id":"dbda01aa-a902-4fd4-899a-cecb5deee63c","metadata":{"id":"dbda01aa-a902-4fd4-899a-cecb5deee63c","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1668439552038,"user_tz":-60,"elapsed":24,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"8f31e6a5-0550-43c8-8b98-29362595ebad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-5c77ea0e-7c33-4920-9c56-30d559892bcf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5c77ea0e-7c33-4920-9c56-30d559892bcf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5c77ea0e-7c33-4920-9c56-30d559892bcf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5c77ea0e-7c33-4920-9c56-30d559892bcf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":131}],"source":["sample"]},{"cell_type":"code","execution_count":132,"id":"56a5c13f-3491-440b-bee5-85cabe029fbd","metadata":{"id":"56a5c13f-3491-440b-bee5-85cabe029fbd","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1668439552039,"user_tz":-60,"elapsed":24,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"0a2e610a-d836-454f-e558-977c908f6c31"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# plot the manhattan distance between two points\n","# plot rattings\n","plt.scatter(sample['broccoli'], sample['brussels_sprouts'], s=200)\n","\n","# euclidean distance\n","\n","x = [5, 8]\n","y = [5, 7]\n","plt.plot(x, y, c='r')\n","\n","# plt.xlim(-1, 11)\n","# plt.ylim(-1, 11)\n","plt.title('Euclidean distance from broccoli rating to brussel sprouts rating')\n","plt.xlabel('Broccoli rating')\n","plt.ylabel('Brussels sprouts rating')\n","plt.show()"]},{"cell_type":"code","execution_count":133,"id":"766ca330-101b-4bd2-af82-c24ec42086f1","metadata":{"id":"766ca330-101b-4bd2-af82-c24ec42086f1","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1668439552039,"user_tz":-60,"elapsed":23,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"6f1ae733-71ba-4952-f063-d695b4d84290"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           broccoli  brussels_sprouts  hamburger\n","student_1         5                 5          4\n","student_2         8                 7          9"],"text/html":["\n","  <div id=\"df-7f189ec7-1603-4ff8-9253-7edf0bbf3bb7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>student_1</th>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>student_2</th>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f189ec7-1603-4ff8-9253-7edf0bbf3bb7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7f189ec7-1603-4ff8-9253-7edf0bbf3bb7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7f189ec7-1603-4ff8-9253-7edf0bbf3bb7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":133}],"source":["sample"]},{"cell_type":"markdown","id":"4b33b99f-e473-4949-a069-690e583ce4a6","metadata":{"id":"4b33b99f-e473-4949-a069-690e583ce4a6"},"source":["#### CHALLENGE: transform the euclidean distance formula to python code (and calculate the euc.dist. between all the students for all of the columns)"]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"rJiR_Y0cjdmH","executionInfo":{"status":"ok","timestamp":1668439552040,"user_tz":-60,"elapsed":23,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"f346ab02-4d01-46ed-9d46-8e3309caf708"},"id":"rJiR_Y0cjdmH","execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n","student                                                                   \n","Alexandra         10                10                10             10   \n","Amelie            10                10                 1              1   \n","Daniela           10                10                10              0   \n","Jorge              3                 3                 9              9   \n","Kaj                3                10                 7              8   \n","Konstantin         5                 0                 9              5   \n","Liane              7                 3                 3              5   \n","Mital              8                 5                 0              0   \n","Patrick            8                 0                 5              0   \n","Sabahuddin         3                 2                 0              0   \n","Sai                7                 0                 0              0   \n","Tal                7                 6                 8              0   \n","Xi                 8                10                 3              9   \n","Yanish             7                 5                 9              7   \n","Monika             9                 8                 7              1   \n","\n","             onion (raw)  peas  olives  blue_cheese  whisky  \n","student                                                      \n","Alexandra             10     7       6           10       0  \n","Amelie                10     9      10            4       2  \n","Daniela                3    10      10           10      10  \n","Jorge                  5     5       8           10       7  \n","Kaj                    8    10       8           10       9  \n","Konstantin            10     8      10            5       8  \n","Liane                  3     7       7            5       1  \n","Mital                  2     9       8            0       4  \n","Patrick                0     8       4            0       0  \n","Sabahuddin             7    10       6            6       7  \n","Sai                    3     5       7            0       2  \n","Tal            -99999999     8      10            7       3  \n","Xi                     7     9       8            1       0  \n","Yanish                 1     8       8            1       5  \n","Monika                 5    10       2            7       1  "],"text/html":["\n","  <div id=\"df-95a222cd-972c-454f-bb65-3fa90a100f65\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger (meat)</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alexandra</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Amelie</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Daniela</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Jorge</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Kaj</th>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantin</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Liane</th>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mital</th>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Patrick</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sabahuddin</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Sai</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Tal</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>-99999999</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Xi</th>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yanish</th>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Monika</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-95a222cd-972c-454f-bb65-3fa90a100f65')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-95a222cd-972c-454f-bb65-3fa90a100f65 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-95a222cd-972c-454f-bb65-3fa90a100f65');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":134}]},{"cell_type":"code","execution_count":135,"id":"a9b30015-abf3-4440-95a2-f734fbe2d6ad","metadata":{"id":"a9b30015-abf3-4440-95a2-f734fbe2d6ad","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668439552041,"user_tz":-60,"elapsed":22,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"62dd7558-ccf8-4eca-8046-851078c86a90"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 0, 9]"]},"metadata":{},"execution_count":135}],"source":["# can you do the same process than before for all the columns?\n","# create a function to do it for all the users\n","student_1 = \"Alexandra\"\n","student_2 =  \"Amelie\"\n","diff = []\n","\n","diff.append(df.iloc[0,0]-df.iloc[1,0])\n","diff.append(df.iloc[0,1]-df.iloc[1,1])\n","diff.append(df.iloc[0,2]-df.iloc[1,2])\n","diff"]},{"cell_type":"code","source":["type(df.index)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uA4odK22m_Xb","executionInfo":{"status":"ok","timestamp":1668439552041,"user_tz":-60,"elapsed":18,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"9421b5e4-07c5-4a73-8aa5-e63b703caa17"},"id":"uA4odK22m_Xb","execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.indexes.base.Index"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"t_LT-OMkowkW","executionInfo":{"status":"ok","timestamp":1668439552634,"user_tz":-60,"elapsed":607,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"t_LT-OMkowkW","execution_count":137,"outputs":[]},{"cell_type":"code","source":["eu_distance = []\n","for i in range(len(df.index)):\n","  broccoli = df.iloc[i,0]-df.iloc[0,0]\n","  brussels = df.iloc[i,1]-df.iloc[0,1]\n","  hamburger = df.iloc[i,2]-df.iloc[0,2]\n","\n","  distance = np.sqrt(broccoli**2 + brussels**2 + hamburger**2)\n","  print(f'the distance between {df.index[0]} and {df.index[i]} is {distance}')\n","  eu_distance.append(distance)\n","\n","\n","  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SDw9nCFelzwa","executionInfo":{"status":"ok","timestamp":1668439552634,"user_tz":-60,"elapsed":14,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"15de82b1-0a95-4cea-97cd-8714ebb8d33a"},"id":"SDw9nCFelzwa","execution_count":138,"outputs":[{"output_type":"stream","name":"stdout","text":["the distance between Alexandra and Alexandra is 0.0\n","the distance between Alexandra and Amelie is 9.0\n","the distance between Alexandra and Daniela is 0.0\n","the distance between Alexandra and Jorge is 9.9498743710662\n","the distance between Alexandra and Kaj is 7.615773105863909\n","the distance between Alexandra and Konstantin is 11.224972160321824\n","the distance between Alexandra and Liane is 10.344080432788601\n","the distance between Alexandra and Mital is 11.357816691600547\n","the distance between Alexandra and Patrick is 11.357816691600547\n","the distance between Alexandra and Sabahuddin is 14.594519519326424\n","the distance between Alexandra and Sai is 14.45683229480096\n","the distance between Alexandra and Tal is 5.385164807134504\n","the distance between Alexandra and Xi is 7.280109889280518\n","the distance between Alexandra and Yanish is 5.916079783099616\n","the distance between Alexandra and Monika is 3.7416573867739413\n"]}]},{"cell_type":"code","source":["len(df.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bBR5GMl0skub","executionInfo":{"status":"ok","timestamp":1668439552635,"user_tz":-60,"elapsed":13,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"697095c5-8723-4ab8-d980-05b49fb1cc1f"},"id":"bBR5GMl0skub","execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","source":["df"],"metadata":{"id":"M3uu4WTpv6Lo","executionInfo":{"status":"ok","timestamp":1668439586227,"user_tz":-60,"elapsed":679,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"2724695b-65a7-42c3-fb49-77532d34993e","colab":{"base_uri":"https://localhost:8080/","height":551}},"id":"M3uu4WTpv6Lo","execution_count":142,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            broccoli  brussels_sprouts  hamburger (meat)  oysters (raw)  \\\n","student                                                                   \n","Alexandra         10                10                10             10   \n","Amelie            10                10                 1              1   \n","Daniela           10                10                10              0   \n","Jorge              3                 3                 9              9   \n","Kaj                3                10                 7              8   \n","Konstantin         5                 0                 9              5   \n","Liane              7                 3                 3              5   \n","Mital              8                 5                 0              0   \n","Patrick            8                 0                 5              0   \n","Sabahuddin         3                 2                 0              0   \n","Sai                7                 0                 0              0   \n","Tal                7                 6                 8              0   \n","Xi                 8                10                 3              9   \n","Yanish             7                 5                 9              7   \n","Monika             9                 8                 7              1   \n","\n","             onion (raw)  peas  olives  blue_cheese  whisky  \n","student                                                      \n","Alexandra             10     7       6           10       0  \n","Amelie                10     9      10            4       2  \n","Daniela                3    10      10           10      10  \n","Jorge                  5     5       8           10       7  \n","Kaj                    8    10       8           10       9  \n","Konstantin            10     8      10            5       8  \n","Liane                  3     7       7            5       1  \n","Mital                  2     9       8            0       4  \n","Patrick                0     8       4            0       0  \n","Sabahuddin             7    10       6            6       7  \n","Sai                    3     5       7            0       2  \n","Tal            -99999999     8      10            7       3  \n","Xi                     7     9       8            1       0  \n","Yanish                 1     8       8            1       5  \n","Monika                 5    10       2            7       1  "],"text/html":["\n","  <div id=\"df-11773b84-80e6-46d0-a984-e2b5b192095f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>broccoli</th>\n","      <th>brussels_sprouts</th>\n","      <th>hamburger (meat)</th>\n","      <th>oysters (raw)</th>\n","      <th>onion (raw)</th>\n","      <th>peas</th>\n","      <th>olives</th>\n","      <th>blue_cheese</th>\n","      <th>whisky</th>\n","    </tr>\n","    <tr>\n","      <th>student</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Alexandra</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>10</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Amelie</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Daniela</th>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>Jorge</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Kaj</th>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>Konstantin</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>Liane</th>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Mital</th>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Patrick</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Sabahuddin</th>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>Sai</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Tal</th>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>-99999999</td>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Xi</th>\n","      <td>8</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Yanish</th>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Monika</th>\n","      <td>9</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11773b84-80e6-46d0-a984-e2b5b192095f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-11773b84-80e6-46d0-a984-e2b5b192095f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11773b84-80e6-46d0-a984-e2b5b192095f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":142}]},{"cell_type":"code","source":["all_distances = []\n","for i in range(len(df.index)):\n","  eu_distance = []\n","  for j in range(len(df.index)):\n","    food_sqrd = 0\n","    for k in range(len(df.columns)):\n","      food = df.iloc[j,k]-df.iloc[i,k]\n","      food_sqrd += food**2\n","\n","    distance = np.sqrt(food_sqrd)\n","      #print(f'the distance between {df.index[i]} and {df.index[j]} is {distance}')\n","    eu_distance.append(distance)\n","\n","  all_distances.append(eu_distance)\n","\n","all_distances"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WGuf9BVEqNEi","executionInfo":{"status":"ok","timestamp":1668439552635,"user_tz":-60,"elapsed":8,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"89d50dbb-9a8a-44e3-9cb3-1cc648762208"},"id":"WGuf9BVEqNEi","execution_count":140,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[0.0,\n","  14.89966442575134,\n","  16.55294535724685,\n","  13.490737563232042,\n","  12.649110640673518,\n","  16.0312195418814,\n","  14.422205101855956,\n","  20.42057785666214,\n","  20.83266665599966,\n","  19.8997487421324,\n","  21.61018278497431,\n","  100000009.00000082,\n","  12.328828005937952,\n","  15.362291495737216,\n","  12.449899597988733],\n"," [14.89966442575134,\n","  0.0,\n","  15.231546211727817,\n","  18.2208671582886,\n","  15.0996688705415,\n","  15.588457268119896,\n","  11.916375287812984,\n","  10.908712114635714,\n","  16.673332000533065,\n","  13.038404810405298,\n","  14.177446878757825,\n","  100000009.00000043,\n","  9.899494936611665,\n","  15.427248620541512,\n","  11.874342087037917],\n"," [16.55294535724685,\n","  15.231546211727817,\n","  0.0,\n","  14.89966442575134,\n","  12.328828005937952,\n","  15.264337522473747,\n","  16.0,\n","  16.46207763315433,\n","  19.44222209522358,\n","  16.431676725154983,\n","  20.174241001832016,\n","  100000002.00000046,\n","  18.33030277982336,\n","  14.212670403551895,\n","  13.152946437965905],\n"," [13.490737563232042,\n","  18.2208671582886,\n","  14.89966442575134,\n","  0.0,\n","  9.591663046625438,\n","  9.643650760992955,\n","  11.74734012447073,\n","  18.027756377319946,\n","  18.16590212458495,\n","  14.560219778561036,\n","  17.804493814764857,\n","  100000004.00000072,\n","  16.1245154965971,\n","  11.575836902790225,\n","  15.329709716755891],\n"," [12.649110640673518,\n","  15.0996688705415,\n","  12.328828005937952,\n","  9.591663046625438,\n","  0.0,\n","  12.449899597988733,\n","  14.628738838327793,\n","  18.027756377319946,\n","  21.400934559032695,\n","  14.212670403551895,\n","  20.71231517720798,\n","  100000007.00000076,\n","  14.352700094407323,\n","  14.0,\n","  14.38749456993816],\n"," [16.0312195418814,\n","  15.588457268119896,\n","  15.264337522473747,\n","  9.643650760992955,\n","  12.449899597988733,\n","  0.0,\n","  12.529964086141668,\n","  15.811388300841896,\n","  16.583123951777,\n","  12.041594578792296,\n","  15.427248620541512,\n","  100000009.00000048,\n","  15.968719422671311,\n","  11.958260743101398,\n","  15.684387141358123],\n"," [14.422205101855956,\n","  11.916375287812984,\n","  16.0,\n","  11.74734012447073,\n","  14.628738838327793,\n","  12.529964086141668,\n","  0.0,\n","  8.888194417315589,\n","  9.16515138991168,\n","  10.677078252031311,\n","  8.54400374531753,\n","  100000002.00000039,\n","  10.198039027185569,\n","  9.055385138137417,\n","  10.14889156509222],\n"," [20.42057785666214,\n","  10.908712114635714,\n","  16.46207763315433,\n","  18.027756377319946,\n","  18.027756377319946,\n","  15.811388300841896,\n","  8.888194417315589,\n","  0.0,\n","  9.327379053088816,\n","  10.44030650891055,\n","  6.928203230275509,\n","  100000001.00000061,\n","  12.529964086141668,\n","  11.61895003862225,\n","  12.806248474865697],\n"," [20.83266665599966,\n","  16.673332000533065,\n","  19.44222209522358,\n","  18.16590212458495,\n","  21.400934559032695,\n","  16.583123951777,\n","  9.16515138991168,\n","  9.327379053088816,\n","  0.0,\n","  14.0,\n","  7.54983443527075,\n","  99999999.0000007,\n","  15.874507866387544,\n","  11.575836902790225,\n","  12.36931687685298],\n"," [19.8997487421324,\n","  13.038404810405298,\n","  16.431676725154983,\n","  14.560219778561036,\n","  14.212670403551895,\n","  12.041594578792296,\n","  10.677078252031311,\n","  10.44030650891055,\n","  14.0,\n","  0.0,\n","  11.090536506409418,\n","  100000006.00000066,\n","  16.06237840420901,\n","  15.0996688705415,\n","  13.379088160259652],\n"," [21.61018278497431,\n","  14.177446878757825,\n","  20.174241001832016,\n","  17.804493814764857,\n","  20.71231517720798,\n","  15.427248620541512,\n","  8.54400374531753,\n","  6.928203230275509,\n","  7.54983443527075,\n","  11.090536506409418,\n","  0.0,\n","  100000002.00000083,\n","  15.132745950421556,\n","  13.379088160259652,\n","  14.89966442575134],\n"," [100000009.00000082,\n","  100000009.00000043,\n","  100000002.00000046,\n","  100000004.00000072,\n","  100000007.00000076,\n","  100000009.00000048,\n","  100000002.00000039,\n","  100000001.00000061,\n","  99999999.0000007,\n","  100000006.00000066,\n","  100000002.00000083,\n","  0.0,\n","  100000006.00000086,\n","  100000000.00000048,\n","  100000004.00000042],\n"," [12.328828005937952,\n","  9.899494936611665,\n","  18.33030277982336,\n","  16.1245154965971,\n","  14.352700094407323,\n","  15.968719422671311,\n","  10.198039027185569,\n","  12.529964086141668,\n","  15.874507866387544,\n","  16.06237840420901,\n","  15.132745950421556,\n","  100000006.00000086,\n","  0.0,\n","  11.313708498984761,\n","  12.767145334803704],\n"," [15.362291495737216,\n","  15.427248620541512,\n","  14.212670403551895,\n","  11.575836902790225,\n","  14.0,\n","  11.958260743101398,\n","  9.055385138137417,\n","  11.61895003862225,\n","  11.575836902790225,\n","  15.0996688705415,\n","  13.379088160259652,\n","  100000000.00000048,\n","  11.313708498984761,\n","  0.0,\n","  12.68857754044952],\n"," [12.449899597988733,\n","  11.874342087037917,\n","  13.152946437965905,\n","  15.329709716755891,\n","  14.38749456993816,\n","  15.684387141358123,\n","  10.14889156509222,\n","  12.806248474865697,\n","  12.36931687685298,\n","  13.379088160259652,\n","  14.89966442575134,\n","  100000004.00000042,\n","  12.767145334803704,\n","  12.68857754044952,\n","  0.0]]"]},"metadata":{},"execution_count":140}]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"owRBK_RjvOib","executionInfo":{"status":"ok","timestamp":1668439552636,"user_tz":-60,"elapsed":6,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}}},"id":"owRBK_RjvOib","execution_count":141,"outputs":[]},{"cell_type":"code","source":["sns.heatmap(all_distances);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":276},"id":"Q_fgXRvZvZE3","executionInfo":{"status":"ok","timestamp":1668439456456,"user_tz":-60,"elapsed":685,"user":{"displayName":"Sai Deshmukh","userId":"14179537551155636236"}},"outputId":"46f3dbd0-b6e7-4432-96b0-39ad6d7aea06"},"id":"Q_fgXRvZvZE3","execution_count":109,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.8"},"colab":{"provenance":[{"file_id":"1-nNnpfywd8gyr0u8r2nJ_WUh1KV_dMKC","timestamp":1668415436853},{"file_id":"1C8kfav6ujTJaSOamC6telalLbnDWyWwp","timestamp":1668167775379},{"file_id":"11rs-9Xc4V5nRKMIODIA6RBxQfJ_a-TjQ","timestamp":1650536460476},{"file_id":"1z6fXA0gA6HHd5yx9dlVEy76ZTcAx36Rk","timestamp":1649335323974}],"collapsed_sections":["338c0a2e-bb18-45a5-9746-f873574aced9","3557492a-59d1-4d22-b605-a41a1e1985bd"]}},"nbformat":4,"nbformat_minor":5}